.TH "elpa_set" 3 "Sat Jun 3 2017" "ELPA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
elpa_set \- set parameter or tunables for the ELPA library
.br

.SH SYNOPSIS
.br
.SS FORTRAN INTERFACE
use elpa
.br
class(elpa_t), pointer :: elpa
.br

.RI  "call \fBelpa%set\fP (\fBcharacter(*)\fP name, \fBdatatype\fP value, \fBinteger\fP error)"
.br
.RI " "
.br
.RI "With the definitions of the input and output variables:"

.br
.TP
.RI "character(*) :: \fBname\fP"
the name of the option to be set
.br
.TP
.RI "datatype :: \fBvalue\fP"
the value which should be assigned to the option \fBname\fP. The datatype can be \fBinteger\fP or \fBreal(kind=c_double)\fP.
.br
.TP
.RI "integer, optional :: \fBerror\fP"
the returned error code. On success it is ELPA_OK, otherwise an error. The error code can be querried with \fBelpa_strerr\fP(3)

.br
.SS C INTERFACE
#include <elpa/elpa.h>
.br
elpa_t handle;

.br
.RI "\fBvoid\fP \fBelpa_set\fP (\fBelpa_t\fP handle, \fBconst char\fP *name, \fBdatatype\fP value, \fBint\fP *error);"
.br
.RI " "
.br
.RI "With the definitions of the input and output variables:"

.br
.br
.TP
.RI "elpa_t \fBhandle\fP;"
the handle of an ELPA object, obtained before with \fBelpa_allocate\fP(3)"
.br
.TP
.RI "const char \fB*name\fP;"
the name of the option to be set.
.br
.TP
.RI "datatype \fBvalue\fP;"
the value which should be assigned to the option \fBname\fP. Datatype can be either \fBint\fP or \fBdouble\fP."

.SH DESCRIPTION
The elpa_set function is used to set \fBparameters\fP and \fBtunables\fP for the run-time of the ELPA library. It returns an error code which can be querried with \fBelpa_strerr\fP(3).

\fBParameters:\fP

Parameters of an ELPA instance have to be set \fIBEFORE\fP the ELPA instance is set up with the function \fBelpa_setup\fP(3).

At the moment the following parameters are supported:
.br
.TP
.RI \fB"na"\fP:
integer parameter. The global matrix has size (na * na)
.TP
.RI \fB"nev"\fP:
integer parameter. The number of eigenvectors to be computed in a call to \fBelpa_eigenvectors\fP(3). Must have dimension 1 <= nev <= na.
.TP
.RI \fB"local_nrows"\fP:
integer parameter. Number of matrix rows stored on this MPI process.
.TP
.RI \fB"local_ncols"\fP:
integer parameter. Number of matrix cols stored on this MPI process.
.TP
.RI \fB"process_row"\fP:
integer parameter. Process row number in the 2D domain decomposition.
.TP
.RI \fB"process_col"\fP:
integer parameter. Process col number in the 2D domain decomposition.
.TP
.RI \fB"mpi_comm_parent"\fP:
integer parameter. The parent MPI communicator which includes all MPI process which are used in the 2D domain decomposition.
.TP
.RI \fB"bandwidth"\fP:
integer parameter. Some ELPA compute steps can be accelerated if the matrix is already in banded form. If set, ELPA assumes that the bandwidth of the matrix is the value set.
.TP
.RI \fB"blacs_context"\fP:
integer parameter. The generalized eigenvalue solver \fBelpa_generalized_eigenvectors\fP(3) use internal calls to some of the scalapack routines. Thus before calling it, the user has to provide properly initialized blacs context.
.TP
.RI \fB"timings"\fP:
Choose whether time measurements should be done in the ELPA routines.

.LP
\fBTunables:\fP

Tunables of an ELPA option can be set at \fIanytime\fP.

At the moment the following parameters are supported:
.br
.TP
.RI \fB"solver"\fP:
Choose which solver should be used in the compute steps \fBelpa_eigenvalues\fP(3) or \fBelpa_eigenvectors\fP(3). At the moment allowed option are \fB"ELPA_SOLVER_1STAGE"\fP or \fB"ELPA_SOLVER_2STAGE"\fP.
.TP
.RI \fB"real_kernel"\fP:
Choose which real kernel should be used in the \fBelpa_eigenvalues\fP(3) or \fBelpa_eigenvectors\fP(3) compute steps, if solver is set to \fB"ELPA_SOLVER_2STAGE"\fP. The available kernels can be querried with \fBelpa2_print_kernels\fP(1).
.TP
.RI \fB"complex_kernel"\fP:
Choose which complex kernel should be used in the \fBelpa_eigenvalues\fP(3) or \fBelpa_eigenvectors\fP(3) compute steps, if solver is set to \fB"ELPA_SOLVER_2STAGE"\fP. The available kernels can be querried with \fBelpa2_print_kernels\fP(1).
.TP
.RI \fB"qr"\fP:
Choose whether in the real case computations in \fBelpa_eigenvalues\fP(3) or \fBelpa_eigenvectors\fP(3) compute steps, if solver is set to \fB"ELPA_SOLVER_2STAGE"\fP, a QR decompostion should be used.
.TP
.RI \fB"qpu"\fP:
Choose whether accelerated GPU calculations should be used. Only available if ELPA has been build with GPU support.
.TP
.RI \fB"debug"\fP:
Choose whether, in case of an error, more debug information should be provided.
.br
.SH "SEE ALSO"
.br
\fBelpa2_print_kernels\fP(1) \fBelpa_init\fP(3) \fBelpa_allocate\fP(3) \fBelpa_setup\fP(3) \fBelpa_strerr\fP(3) \fBelpa_eigenvalues\fP(3) \fBelpa_eigenvectors\fP(3) \fBelpa_cholesky\fP(3) \fBelpa_invert_triangular\fP(3) \fBelpa_solve_tridiagonal\fP(3) \fBelpa_hermitian_multiply\fP(3) \fBelpa_deallocate\fP(3) \fBelpa_uninit\fP(3)
