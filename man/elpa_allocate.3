.TH "elpa_allocate" 3 "Sat Jun 3 2017" "ELPA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
elpa_allocate \- allocate an instance of the ELPA library
.br

.SH SYNOPSIS
.br
.SS FORTRAN INTERFACE
use elpa
.br
class(elpa_t), pointer :: elpa
.br

.RI  "elpa => \fBelpa_allocate\fP (error)"
.br
.RI " "
.br
.RI "With the definitions of the input and output variables:"

.br
.RI "class(elpa_t)     :: \fBelpa\fP  ! returns an instance of the ELPA object"
.br
.RI "integer, optional :: \fBerror\fp ! a returned error code 
.br
.SS C INTERFACE
#include <elpa/elpa.h>
.br
elpa_t handle;

.br
.RI "\fBelpa_t\fP handle = \fBelpa_allocate\fP(\fBint\fP *error);"
.br
.RI " "
.br
.RI "With the definitions of the input and output variables:"

.br
.br
.RI "elpa_t \fBhandle\fP;  // returns an handle to the allocated ELPA object"
.br
.RI "int \fB*error\fP;     // a returned error code
.br


.SH DESCRIPTION
Allocate an ELPA object. The function \fBelpa_init\fP(3) must be called once \fIBEFORE\fP \fBelpa_allocate\fP can be called.
.br
.SH "SEE ALSO"
.br
\fBelpa2_print_kernels\fP(1) \fBelpa_init\fP(3) \fBelpa_set\fP(3) \fBelpa_setup\fP(3) \fBelpa_strerr\fP(3) \fBelpa_eigenvalues\fP(3) \fBelpa_eigenvectors\fP(3) \fBelpa_cholesky\fP(3) \fBelpa_invert_triangular\fP(3) \fBelpa_solve_tridiagonal\fP(3) \fBelpa_hermitian_multiply\fP(3) \fBelpa_uninit\fP(3) \fBelpa_deallocate\fP(3)
