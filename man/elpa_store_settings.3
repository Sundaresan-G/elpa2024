.TH "elpa_store_settings" 3 "Tue Nov 13 2018" "ELPA" \" -*- nroff -*-
.ad l
.nh
.SH NAME
elpa_store_settings \- stores the setting of an elpa object
.br

.SH SYNOPSIS
.br
.SS FORTRAN INTERFACE
use elpa
.br
class(elpa_t), pointer :: elpa
.br

.RI  "call elpa%\fBstore_settings\fP (filename, error)"
.br
.RI " "
.br
.RI "With the definitions of the input and output variables:"
.br
.br
.TP
.RI "class(elpa_t)       \fBelpa\f:         returns an instance of the ELPA object"
.br
.RI "character(*)        \fBfilename\fP:   The filename to be used for storing the settings"
.br
.RI "integer, optinal    \fBerror\fP:      A error return code"
.br

.SS C INTERFACE
#include <elpa/elpa.h>
.br
elpa_t handle;

.br
.RI "void \fBelpa_store_settings\fP(\fBelpa_t\fP handle, \fBconst char\fP *filename, \fBint\fP *error):
.br
.RI " "
.br
.RI "With the definitions of the input and output variables:"
.br
.br
.TP
.RI "elpa_t \fBhandle\fP:       The handle to the ELPA object"
.br
.TP
.RI "const char \fB*filename\fP: the filename to store the settings"
.br
.RI "int \fB*error\fP:           the error return code"
.TP

.SH DESCRIPTION
Stores all the settings of an ELPA object in an human readable form to a file specified via the \fBfilename\fP parameter. The settings can later be restored with the
\fBelpa_load_settings\fP(3) method. 
.SH "SEE ALSO"
.br
\fBelpa_load_setting\fP(3)
